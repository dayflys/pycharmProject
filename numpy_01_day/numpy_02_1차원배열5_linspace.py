'''
    linspace(start, stop [,num=50 ,endpoint=True])
    변수 = linspace(n,m,[num]) => [n,m] 사이의 num 갯수 만큼 반환 , endpoint= False 면 마지막 값은 포함 안함
    -[start, stop] 범위 값을 num 갯수만큼 생성해서 반환. ndarray로 반환하며 기본타입은 float64이다.
    -axis (축)
        => 행 축 = 0 axis
        => 열 축 = 1 axis
'''
import numpy as np
#1.linspace(start, stop [,num=50 , endpoint=Tre])

x = np.linspace(0,1)
print(x,len(x))
print('*'*100)
'''
[0.         0.02040816 0.04081633 0.06122449 0.08163265 0.10204082
 0.12244898 0.14285714 0.16326531 0.18367347 0.20408163 0.2244898
 0.24489796 0.26530612 0.28571429 0.30612245 0.32653061 0.34693878
 0.36734694 0.3877551  0.40816327 0.42857143 0.44897959 0.46938776
 0.48979592 0.51020408 0.53061224 0.55102041 0.57142857 0.59183673
 0.6122449  0.63265306 0.65306122 0.67346939 0.69387755 0.71428571
 0.73469388 0.75510204 0.7755102  0.79591837 0.81632653 0.83673469
 0.85714286 0.87755102 0.89795918 0.91836735 0.93877551 0.95918367
 0.97959184 1.        ],50
 '''
#2.linspace(start, stop, endpoint=False)

x = np.linspace(0,1,endpoint=False) #endpoint=False 지정시 stop 포함 안됨
print(x,len(x))
print('*'*100)
'''
[0.   0.02 0.04 0.06 0.08 0.1  0.12 0.14 0.16 0.18 0.2  0.22 0.24 0.26
 0.28 0.3  0.32 0.34 0.36 0.38 0.4  0.42 0.44 0.46 0.48 0.5  0.52 0.54
 0.56 0.58 0.6  0.62 0.64 0.66 0.68 0.7  0.72 0.74 0.76 0.78 0.8  0.82
 0.84 0.86 0.88 0.9  0.92 0.94 0.96 0.98] 50
 '''

#3.linspace(start, stop, num, endpoint=False)

x = np.linspace(0,1,11) # 0<= <=1 사이 값에서 11개 반환
print(x,len(x))
print('*'*100)
'''
[0.         0.09090909 0.18181818 0.27272727 0.36363636 0.45454545
 0.54545455 0.63636364 0.72727273 0.81818182 0.90909091] 11
 '''
#4.linspace(start, stop, num, dtype=int)

x = np.linspace(0,1,11,dtype=int) # 0<= <=1 사이 값에서 int값 11개 반환
print(x,len(x)) #[0 0 0 0 0 0 0 0 0 0 1] 11
print('*'*100)