'''

    numpy 특징
    - 다차원 배열(python의 리스트)를 효과적으로 처리할 수 있도록 도와주는 라이브러리
        => [] 개수 당 차원의 수가 하나씩 늘어난다. 예> [[]] : 2차원
    - 1차원 배열 = 벡터 , 2차원 배열 = 행렬 , 3차원 이상 배열 = tensor 라고 한다.
    - 대괄호가 없는 값 or 대괄호 안에 대괄호로 묶이지 않은 숫자 = scalar

    용어
    - 스칼라 (scalar): 값, 차원은 0
    - 벡터 (vector): [값, 값2, 값3 ], 차원은 1
    - 행렬 (array) : [[값, 값2,값3],[값,값2,값3]], 차원은 2
    - 텐서 (tensor) : [[[값,값2],[]],[[],[]]], 차원은 3, 그 이상도 tensor라고 칭함

    연산 => 합계, 평균, 세로 연산, 차원간의 연산
    차원 수는 ndim으로 알 수 있고 각 차원의 형상(모양)을 알려주는 shape이 있다. (행, 열, 층 ) => shape은 중요함
    벡터화 연산(Vectorized operation) 가능하다 => python 에서는 리스트 덧셈 연산은 리스트가 이어지지만, numpy에서는 요소 연산이 진행된다.
    배열 인덱싱(array indexing) 및 슬라이싱(slicing)을 이용한 질의(query)기능을 이용하여 간단한 코드로도 복잡한 수식을 계산할 수 있다.
     =>python 에서는 인덱싱(indexing), 슬라이싱(slicing)만이 가능하지만,
       numpy는 한꺼번에 여러 개 추출 가능(fancy 색인, 정수형 색인), 또한 논리 값을 맵핑 시켜 true인 값만을 추출하는 불린 색인(boolean 색인)을
       사용가능하다.
'''

import pprint