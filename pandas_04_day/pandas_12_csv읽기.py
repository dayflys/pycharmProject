'''
    csv 파일 읽기

'''

import pandas as pd
import numpy as np

#1. csv 파일 읽기
df = pd.read_csv('./data/msft.csv')
print(df.shape) #(3767, 6) ==> 데이터 구조를 보여준다. 앞이 행 뒤에가 열이다.
print(df.head())
'''
        Date   Open   High    Low  Close   Volume
0  7/21/2014  83.46  83.53  81.81  81.93  2359300
1  7/18/2014  83.30  83.40  82.52  83.35  4020800
2  7/17/2014  84.35  84.63  83.33  83.63  1974000
3  7/16/2014  83.77  84.91  83.66  84.91  1755600
4  7/15/2014  84.30  84.38  83.20  83.58  1874700
'''

#2. 특정 컬럼을 인덱스로, index_col=컬럼 인덱스
df = pd.read_csv('./data/msft.csv', index_col=0)
print(df.head())
'''
            Open   High    Low  Close   Volume
Date                                          
7/21/2014  83.46  83.53  81.81  81.93  2359300
7/18/2014  83.30  83.40  82.52  83.35  4020800
7/17/2014  84.35  84.63  83.33  83.63  1974000
7/16/2014  83.77  84.91  83.66  84.91  1755600
7/15/2014  84.30  84.38  83.20  83.58  1874700
'''
#3. 컬럼명 변경 ==> names=리스트 , header=0(기존 컬럼명 제거)
df = pd.read_csv('./data/msft.csv',header=0, names=['date','open','high','low','close','volume'])
print(df.head())
'''
        date   open   high    low  close   volume
0  7/21/2014  83.46  83.53  81.81  81.93  2359300
1  7/18/2014  83.30  83.40  82.52  83.35  4020800
2  7/17/2014  84.35  84.63  83.33  83.63  1974000
3  7/16/2014  83.77  84.91  83.66  84.91  1755600
4  7/15/2014  84.30  84.38  83.20  83.58  1874700
'''
#4. 특정 컬럼만 보기
df = pd.read_csv('./data/msft.csv', usecols=['Date','Open'])
print(df.head())
'''
        Date   Open
0  7/21/2014  83.46
1  7/18/2014  83.30
2  7/17/2014  84.35
3  7/16/2014  83.77
4  7/15/2014  84.30
'''
df = pd.read_csv('./data/msft.csv', usecols=[0,1])
print(df.head())
'''
        Date   Open
0  7/21/2014  83.46
1  7/18/2014  83.30
2  7/17/2014  84.35
3  7/16/2014  83.77
4  7/15/2014  84.30
'''
#5. 행 갯수 지정
df = pd.read_csv('./data/msft.csv', nrows=3)
print(df)
'''
        Date   Open   High    Low  Close   Volume
0  7/21/2014  83.46  83.53  81.81  81.93  2359300
1  7/18/2014  83.30  83.40  82.52  83.35  4020800
2  7/17/2014  84.35  84.63  83.33  83.63  1974000
'''
print('#################################')
#5. 특정 행 skip => header 옵션을 넣을 때는 names옵션을 지정하지 않으면 컬럼명 값이 바뀌지 않는다.
df = pd.read_csv('./data/msft.csv', skiprows=[0,1], header=0,names=['date','open','high','low','close','volume'])
print(df.head())
'''
        date   open   high    low  close   volume
0  7/17/2014  84.35  84.63  83.33  83.63  1974000
1  7/16/2014  83.77  84.91  83.66  84.91  1755600
2  7/15/2014  84.30  84.38  83.20  83.58  1874700
3  7/14/2014  83.66  84.64  83.11  84.40  1432100
4  7/11/2014  83.55  83.98  82.85  83.35  2001400
'''
########################################
#6. nan 값 읽기 (기본적으로 공백으로 된 csv파일을 읽으면 NaN 처리됨)
df = pd.read_csv('./data/company3.csv')
print(df)
'''
   판매년도  판매월   제품   판매처    수량     금액
0  2010    1  노트북   백화점  10.0  200.0
1  2010    1  핸드폰  하이마트   5.0  200.0
2  2010    1   PC   편의점   NaN  200.0
3  2010    2  노트북   백화점   9.0    NaN
'''
df = pd.read_csv('./data/company3.csv', na_filter=False)
print(df)
'''
   판매년도  판매월   제품   판매처  수량   금액
0  2010    1  노트북   백화점  10  200
1  2010    1  핸드폰  하이마트   5  200
2  2010    1   PC   편의점      200
3  2010    2  노트북   백화점   9    
'''

#7. 임의의 값을 nan으로 변경
df = pd.read_csv('./data/company3.csv', na_values=[10.0, 5.0])
print(df)
'''
   판매년도  판매월   제품   판매처   수량     금액
0  2010    1  노트북   백화점  NaN  200.0
1  2010    1  핸드폰  하이마트  NaN  200.0
2  2010    1   PC   편의점  NaN  200.0
3  2010    2  노트북   백화점  9.0    NaN
'''

#8. ,(쉼표) 구분자가 아닌 파일 읽기 값 읽기
df = pd.read_csv('./data/msft_piped.txt', sep='|')
print(df.head())
'''
   Unnamed: 0       Date   Open   High    Low  Close   Volume
0           0  7/21/2014  83.46  83.53  81.81  81.93  2359300
1           1  7/18/2014  83.30  83.40  82.52  83.35  4020800
2           2  7/17/2014  84.35  84.63  83.33  83.63  1974000
3           3  7/16/2014  83.77  84.91  83.66  84.91  1755600
4           4  7/15/2014  84.30  84.38  83.20  83.58  1874700
'''

#9. encoding
df = pd.read_csv('./data/msft_piped.txt', encoding='utf-8')
