'''
    python 클래스
    -1. 객체지향 프로그래밍 (object oriented programming,OOP) - 개발 방법론
        - 보완해서 나온 개발 방법론 => '함수형 프로그래밍' (functional programming) => 핵심기술: lambda형 함수
        - 따라서, 클래스 + lambda 함수 형식으로 개발을 많이 진행한다

    -2. 객체(object)? <- 주체(subject)가 현실 세계에서 바라보는 사물을 의미
        -예) 노트북 객체, 책상 객체, 학생 객체, 등등등...

    객체에는 요소가 두가지가 존재한다.
    예) 노트북 객체
    - 속성
        -가격
        -색상
        -제조사
        -제조일
    - 동작(기능)
        -on
        -off

    학생 객체
    -속성
        -학번
        -이름
    -동작
        -공부하기

    프로그래밍 개발
    -현실 세계 ===> 가상세계로 옮기는 것을 프로그래밍이라고 한다.
        -객체 추출
        예) 학생 관리 프로그램 개발
        -학생 객체 추출
            -속성
                -이름
                -나이
            -동작
                -공부하기
        -강사 객체
            -속성
            -동작

    -프로그래밍 세계(가상 세계)
        -클래스 (학생 객체와 맵핑)
        class Student():
            -변수 (속성과 맵핑)
            student_name =
            student_age =
            -함수(동작과 맵핑)
            def study():
                pass


    -프로그래밍 프로세스: 요구사항-> 분석(객체 추출이 해당함)-> 설계(클래스 구현이 해당함) -> 구현-> 테스트 -> 배포

    클래스 문법
    class 클래스 명(첫 글자는 대문자: camel case): => 객체(클래스)
        def 함수명(self): => 동작(함수)
            self.변수명 = 값 => 속성(변수) => 항상 메서드 안에서 선언이 된다. 그리고 항상 self.변수 형태가 되어야 한다.

    특징:
        - 반드시 작성된 클래스를 메모리에 올려야 한다.
            => 메모리에 클래스를 올려주는 작업을 '객체 생성'이라고 부른다.

        -객체 생성 문법
            => 변수명 = class명() (자바는 변수명 = new 클래스명())
'''
#일반함수
def xx():
    pass

#클래스 메서드
class Cat:
    #eat 메서드- self 필수
    def eat(self):
        self.name = '야옹이'
        self.age = 2

    def sleep(self):
        pass
c1 = Cat() #객체 생성
