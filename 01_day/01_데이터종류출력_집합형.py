#집합형
def name(a):
    return a
#문자열
print("문자열:", '홍길동')
print("문자열:", "홍길동")
print("문자열:", """홍길동""")
print("문자열:", '''홍길동''')
#리스트
print("리스트: ",[20,30,40])
print("리스트: ",['홍길동','이순신'])
print("리스트: ",['홍길동','이순신',"홍길동"])
print("리스트: ",['홍길동',20,True])
#줄 바꿈 => command shift 화살표 키
#튜플
print("튜플: ", (10,20,30,20,10))
print("튜플: ", ('홍길동','이순신','홍길동'))
print("튜플: ", ('홍길동',20,True))
print("튜플: ", (20,))#하나의 값을 갖는 튜플의 표현식
#집합(set)
print('set: ',{10,20,30,20,10})
print('set: ',{10,20,30,20,10})
#dictionary
print("딕셔너리: ",{"name": "홍길동", "age":20, "phone": ["010","011"],"func": name(20)})
#함수도 데이터로 처리하기 때문에 집합형 데이터에 다 들어갈 수 있다.

print([10,"a",True,None,[],name(30)])

print({name(10),name})